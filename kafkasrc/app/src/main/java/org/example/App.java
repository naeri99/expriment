/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;
import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.ProducerRecord;
import org.apache.kafka.clients.producer.RecordMetadata;
import java.util.Properties;
import java.util.concurrent.ExecutionException;


public class App {

    public static void main(String[] args) {

        String bootstrapServers = "localhost:9092";  // Replace with your Kafka broker address
        String topicName = "test-topic";             // Replace with your topic name

        // Configure the Kafka producer
        Properties properties = new Properties();
        properties.put("bootstrap.servers", bootstrapServers);
        properties.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");
        properties.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer");
        properties.put("acks", "all");  // Producer waits for acknowledgment from the broker

        // Create the Kafka producer
        KafkaProducer<String, String> producer = new KafkaProducer<>(properties);

        // Send messages to the Kafka topic
        for (int i = 0; i < 1000; i++) {
            String key = "key-" + i;
            String value = "message-" + i;

            ProducerRecord<String, String> record = new ProducerRecord<>(topicName, key, value);

            try {
                // Send the message and wait for acknowledgment
                RecordMetadata metadata = producer.send(record).get();
                System.out.printf("Sent message with key: %s, value: %s to partition: %d, offset: %d\n",
                        key, value, metadata.partition(), metadata.offset());
            } catch (ExecutionException | InterruptedException e) {
                e.printStackTrace();
            }
        }

        // Close the producer
        producer.close();
        
    }
}
